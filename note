#!/bin/zsh

version="0.2.0"
if [[ "$1" == "--version" || "$1" == "-v" ]]; then
  echo "Note script version $version"
  exit 0
fi
NOTES_FILE="$(dirname "$0")/note.txt"

if [[ "$1" == "list" ]]; then
  if [[ -z "$2" ]]; then
    if [[ -f "$NOTES_FILE" ]]; then
      echo "Note:"
      line_count=$(wc -l <"$NOTES_FILE")
      note_count=$((line_count / 2))
      for i in $(seq 0 $((note_count - 1))); do
        title_line=$((i * 2 + 1))
        note_line=$((i * 2 + 2))
        title=$(sed -n "${title_line}p" "$NOTES_FILE")
        note=$(sed -n "${note_line}p" "$NOTES_FILE")
        echo "$i: $title - $note"
      done
    else
      echo "Note: No notes yet."
    fi
  else
    if [[ -f "$NOTES_FILE" ]]; then
      cnt=0
      line_count=$(wc -l <"$NOTES_FILE")
      note_count=$((line_count / 2))
      for i in $(seq 0 $((note_count - 1))); do
        title_line=$((i * 2 + 1))
        note_line=$((i * 2 + 2))
        title=$(sed -n "${title_line}p" "$NOTES_FILE")
        body=$(sed -n "${note_line}p" "$NOTES_FILE")
        if echo "$title" | grep -iq "$2"; then
          echo "$i: $(echo "$title") - $body"
          cnt=$((cnt + 1))
        fi
      done
      title_line=$(($line_count / 2))
      echo "$cnt / $line_count"
    fi
  fi
  exit 0
fi

if [[ "$1" == "add" ]]; then
  if [[ -z "$2" ]]; then
    echo "Note: Please provide a title and note."
    echo "Usage: note add <Title> <Note body>"
    exit 1
  fi
  echo "$2" >>"$NOTES_FILE"
  title=$2
  shift 2
  echo "$*" >>"$NOTES_FILE"
  echo ${title}
  echo "Note: Added \"${title}\" - \"$*\""
  exit 0
fi

if [[ "$1" == "del" || "$1" == "dell" ]]; then
  if [[ -z "$2" ]]; then
    echo "Note: Please provide a note number to delete."
    exit 1
  fi
  if [[ "$2" == "all" ]]; then
    echo -n "Note: Are you sure you want to delete all notes? (y/N): "
    read -q confirm
    if [[ "$confirm" == "y" || "$confirm" == "Y" ]]; then
      rm -f "$NOTES_FILE"
      echo "Note: All notes deleted."
    else
      echo "Note: Deletion cancelled."
    fi
    exit 0
  fi

  num="$2"
  start_line=$((num * 2 + 1))
  sed -i "${start_line}d" "$NOTES_FILE"
  sed -i "${start_line}d" "$NOTES_FILE"
  echo "Note: Deleted note number $num"
  exit 0
fi

if [[ "$1" == "find" ]]; then
  if [[ -z "$2" ]]; then
    echo "Note: Please provide a keyword to search for."
    exit 1
  fi

  if [[ -f "$NOTES_FILE" ]]; then
    line_count=$(wc -l <"$NOTES_FILE")
    note_count=$((line_count / 2))

    for i in $(seq 0 $((note_count - 1))); do
      title_line=$((i * 2 + 1))
      note_line=$((i * 2 + 2))
      title=$(sed -n "${title_line}p" "$NOTES_FILE")
      body=$(sed -n "${note_line}p" "$NOTES_FILE")

      if [[ "$3" == "-t" ]]; then
        if echo "$title" | grep -iq "$2"; then
          echo "$i: $(echo "$title" | grep --color=always -i "$2") - $body"
        fi
      elif [[ "$3" == "-b" ]]; then
        if echo "$body" | grep -iq "$2"; then
          echo "$i: $title - $(echo "$body" | grep --color=always -i "$2")"
        fi
      else
        if echo "$title" | grep -iq "$2" || echo "$body" | grep -iq "$2"; then
          title_colored=$(echo "$title" | grep --color=always -i "$2" || echo "$title")
          body_colored=$(echo "$body" | grep --color=always -i "$2" || echo "$body")
          echo "$i: $title_colored - $body_colored"
        fi
      fi
    done
  else
    echo "Note: No notes found."
  fi
  exit 0
fi

if [[ "$1" == "edit" ]]; then
  if [[ -z "$2" ]]; then
    echo "Note: Please provide a note number to edit."
    exit 1
  fi

  if [[ ! -f "$NOTES_FILE" ]]; then
    echo "Note: No notes found."
    exit 1
  fi

  num="$2"
  start_line=$((num * 2 + 1))

  if ! sed -n "${start_line}p" "$NOTES_FILE" &>/dev/null; then
    echo "Note: Note number $num does not exist."
    exit 1
  fi

  new_title=""
  new_body=""
  title=$(sed -n "${start_line}p" "$NOTES_FILE")
  body=$(sed -n "$((start_line + 1))p" "$NOTES_FILE")
  if [[ -z "$3" ]]; then
    echo "Current Title: $title"
    echo "Current Body: $body"
    echo -n "Enter new title (leave empty to keep current): "
    read new_title
    echo -n "Enter new body (leave empty to keep current): "
    read new_body
  elif [[ "$3" == "-t" ]]; then
    new_title="$4"
    new_body="$body"
  elif [[ "$3" == "-b" ]]; then
    new_title="$title"
    new_body="$4"
  else
    new_title="$3"
    new_body="$4"
  fi

  if [[ -n "$new_title" ]]; then
    sed -i "${start_line}s/.*/$new_title/" "$NOTES_FILE"
  fi
  if [[ -n "$new_body" ]]; then
    sed -i "$((start_line + 1))s/.*/$new_body/" "$NOTES_FILE"
  fi

  echo "Note: Note number $num updated."
  exit 0
fi

if [[ "$1" == "help" ]]; then
  echo "Usage: note [command] [args]"
  echo "Commands:"
  echo "  list [Title]         List all saved notes or filter by title"
  echo "  add <Title> <Note body>   Add a new note with title and body"
  echo "  del [number|all]   Delete a note by number or all notes"
  echo "  find <keyword> [-t|-b]   Find notes by keyword in title,body"
  echo "  edit <number> [new_title] [new_body]   Edit a note by number"
  echo "  edit <number> -t <new_title>   Edit only the title of a note"
  echo "  edit <number> -b <new_body>   Edit only the body of a note"
  echo "  help          Show help message"
  echo "  --version, -v   Show script version"
  exit 0
fi
